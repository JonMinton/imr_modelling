{"frames":[{"func":"mutate(df, death_tri = map(code, function(x) {\n    pivot_longer(select(arrange(filter(HMDHFDplus::readHMDweb(x, \n        \"Deaths_lexis\", username = Sys.getenv(\"HMD_USERNAME\"), \n        password = Sys.getenv(\"HMD_PASSWORD\")), Age == 0), Cohort) %>%  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate.data.frame(df, death_tri = map(code, function(x) {\n    pivot_longer(select(arrange(filter(HMDHFDplus::readHMDweb(x, \n        \"Deaths_lexis\", username = Sys.getenv(\"HMD_USERNAME\"), \n        password = Sys.getenv(\"HMD_PASSWORD\")), Age == 0), Cohort) %>%  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate_cols(.data, dplyr_quosures(...), by)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(for (i in seq_along(dots)) {\n    poke_error_context(dots, i, mask = mask)\n    context_poke(\"column\", old_current_column)\n    new_columns <- mutate_col(dots[[i]], data, mask, new_columns) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate_col(dots[[i]], data, mask, new_columns)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mask$eval_all_mutate(quo)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval()","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"map(code, function(x) {\n    pivot_longer(select(arrange(filter(HMDHFDplus::readHMDweb(x, \n        \"Deaths_lexis\", username = Sys.getenv(\"HMD_USERNAME\"), \n        password = Sys.getenv(\"HMD_PASSWORD\")), Age == 0), Cohort) %>%  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"map_(\"list\", .x, .f, ..., .progress = .progress)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"with_indexed_errors(i = i, names = names, error_call = .purrr_error_call, \n    call_with_cleanup(map_impl, environment(), .type, .progress, \n        n, names, i))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(expr, error = function(cnd) {\n    if (i == 0L) {\n    }\n    else { ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"call_with_cleanup(map_impl, environment(), .type, .progress, \n    n, names, i)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".f(.x[[i]], ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"pivot_longer(select(arrange(filter(HMDHFDplus::readHMDweb(x, \n    \"Deaths_lexis\", username = Sys.getenv(\"HMD_USERNAME\"), password = Sys.getenv(\"HMD_PASSWORD\")), \n    Age == 0), Cohort) %>% set_names(nm = tolower(names(.))), \n    -openinterval), cols = female:total, names_to = \"sex\", values_to = \"deaths\")","file":"","line_number":6,"end_line_number":18,"character_number":7,"end_character_number":11},{"func":"select(arrange(filter(HMDHFDplus::readHMDweb(x, \"Deaths_lexis\", \n    username = Sys.getenv(\"HMD_USERNAME\"), password = Sys.getenv(\"HMD_PASSWORD\")), \n    Age == 0), Cohort) %>% set_names(nm = tolower(names(.))), \n    -openinterval)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"arrange(filter(HMDHFDplus::readHMDweb(x, \"Deaths_lexis\", username = Sys.getenv(\"HMD_USERNAME\"), \n    password = Sys.getenv(\"HMD_PASSWORD\")), Age == 0), Cohort) %>% \n    set_names(nm = tolower(names(.)))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"set_names(., nm = tolower(names(.)))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"arrange(filter(HMDHFDplus::readHMDweb(x, \"Deaths_lexis\", username = Sys.getenv(\"HMD_USERNAME\"), \n    password = Sys.getenv(\"HMD_PASSWORD\")), Age == 0), Cohort)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"filter(HMDHFDplus::readHMDweb(x, \"Deaths_lexis\", username = Sys.getenv(\"HMD_USERNAME\"), \n    password = Sys.getenv(\"HMD_PASSWORD\")), Age == 0)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"HMDHFDplus::readHMDweb(x, \"Deaths_lexis\", username = Sys.getenv(\"HMD_USERNAME\"), \n    password = Sys.getenv(\"HMD_PASSWORD\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"session_jump_to(html2, url = grab_url)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"session_get(x, url, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"httr::GET(url, x$config, ..., handle = x$handle)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"request_perform(req, hu$handle$handle)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"request_fetch(req$output, req$url, handle)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"request_fetch.write_memory(req$output, req$url, handle)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"curl::curl_fetch_memory(url, handle = handle)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"no loop for break/next, jumping to top level"}